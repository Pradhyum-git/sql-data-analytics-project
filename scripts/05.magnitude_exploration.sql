

/*
======================================================
          Magnitude Exploration
======================================================
Purpose :
        - To explore aggregated values of measures by dimensions
Functions used:
        - COUNT()
        - GROUP BY()
        - SUM()
        - AVG()
        - ORDER BY
*/
-- Magnitude=[Measure]by[Dimension]

-- Find the total number of customers by countries
SELECT
country,COUNT(customer_key) total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers;

-- Find total customers by gender
SELECT
gender,
COUNT(customer_key) as total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC;

-- Find total products by category
SELECT
category,
COUNT(product_key) as total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC;

-- What is the average costs in each category
SELECT
category,
AVG(cost) as average_cost
FROM gold.dim_products
GROUP BY category
ORDER BY average_cost;

-- What is the total revenue generated by each category
SELECT
d.category,
SUM(sales_amount) as total_revenue
FROM gold.fact_sales f
LEFT JOIN
gold.dim_products d
ON d.product_key=f.product_key
GROUP BY d.category
ORDER BY total_revenue DESC;

-- what is the total revenue generated by each customer
SELECT
c.customer_key,
c.firstname,
c.lastname,
SUM(f.sales_amount) as total_revenue
FROM gold.fact_sales f
LEFT JOIN
gold.dim_customers c
ON c.customer_key=f.customer_key
GROUP BY c.customer_key,c.firstname,c.lastname
ORDER BY total_revenue DESC;

-- What is the distribution of total sold items by country
SELECT 
c.country,
SUM(f.quantity) as total_sold_items
FROM gold.fact_sales f
LEFT JOIN
gold.dim_customers c
on f.customer_key=c.customer_key
GROUP BY c.country
ORDER BY total_sold_items DESC;

-- find the total number of customers
SELECT
marital_status,
COUNT(customer_key) AS total_customers
FROM
gold.dim_customers
GROUP BY marital_status; 

-- find the total revenue generated by marital_status person
SELECT
d.marital_status,
SUM(f.sales_amount) AS total_revenue
FROM
gold.fact_sales f
LEFT JOIN
gold.dim_customers d 
ON f.customer_key=d.customer_key
GROUP BY d.marital_status
ORDER BY total_revenue DESC;

-- find the total_revenue generated by country
SELECT
d.country,
SUM(f.sales_amount) as total_revenue
FROM
gold.fact_sales f
LEFT JOIN
gold.dim_customers d 
ON d.customer_key=f.customer_key
GROUP BY d.country
ORDER BY total_revenue DESC;

-- find the total_revenue generated by maintenance
SELECT
d.maintenance,
SUM(f.sales_amount) AS total_revenue
FROM 
gold.fact_sales f;

-- find the total_expenses,total_revenue,total_profit generated by each category
SELECT
d.category,
SUM(d.cost) as total_expenses,
SUM(f.sales_amount) AS total_revenue,
SUM(f.sales_amount) - SUM(d.cost) AS total_profit
FROM
gold.fact_sales f
LEFT JOIN
gold.dim_products d 
ON f.product_key=d.product_key
GROUP BY d.category
ORDER BY total_revenue DESC;

